---
import type { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';
import Base from "../../layouts/Base.astro"
import Posts from "../../layouts/Posts.astro";
import { getAllPosts, getAllTags, getSettings } from "../../utils/api";

export async function getStaticPaths() {
  const posts = await getAllPosts();
  const { tags } = await getAllTags();
  const settings = await getSettings();

  return tags.map((tag) => {
    const filteredPosts = posts.filter((post) =>
      post.tags?.map((tag) => tag.slug).includes(tag.slug)
    );
    return {
      params: { slug: tag.slug },
      props: {
        posts: filteredPosts,
        settings,
        tag,
      },
    };
  });
}

export type Params = InferGetStaticParamsType<typeof getStaticPaths>;
export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { posts, tag } = Astro.props;
const title = `Posts by Tag: ${tag.name}`;
const description = `all of the articles we've posted and linked so far under the tag: ${tag.slug}`;
---

<Base meta_title={title} description={description} image={tag.feature_image} blogpost>
  {console.log(tag)}
  <main id="site-main" class="site-main outer">
    <div class="inner posts">
      <div class="post-feed">
        <section class="post-card post-card-large max-w-screen-md mx-auto">
          {tag.feature_image && (
            <div class="post-card-image-link">
              <img
                class="post-card  rounded-lg"
                src={tag.feature_image}
                alt={tag.name}
                loading="lazy"
              />
            </div>
          )}
          <div class="post-card-content">
            <div class="post-card-content-link">
              <header class="post-card-header">
                <h2 class="post-card-title">{tag.name}</h2>
              </header>
              <div class="post-card-excerpt">
                <p>
                  {tag.description
                    ? tag.description
                    : `A collection of ${tag.count?.posts || 0 } Post${
                        tag.count?.posts ?? 0 > 1 ? "s" : ""
                      }`}
                </p>
              </div>
            </div>
          </div>
        </section>
         <Posts posts={posts} /> 
      </div>
    </div>
  </main>
</Base>