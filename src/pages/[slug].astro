---
import Base from "@layouts/Base.astro";
import { Image } from "astro:assets";
import { slugify } from "@utils/slug";
import FormattedDate from "@components/FormattedDate.astro";
import CalendarIcon from "@icons/CalendarIcon.astro";
import CategoryIcon from "@icons/CategoryIcon.astro";

import type { InferGetStaticPropsType } from 'astro';
import { getSettings, getAllPages, getAllPosts } from "../utils/api";
import type { Tag, Post } from "@ts-ghost/content-api";

export async function getStaticPaths() {
  const [posts, pages, settings] = await Promise.all([getAllPosts(), await getAllPages(), await getSettings()]);
  const allPosts = [...posts, ...pages];
  return allPosts.map((post: Post) => ({
    params: { slug: post.slug },
    props: { post, posts, settings },
  }));
}

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const {post, posts, settings} = Astro.props as Props;

---

<Base meta_title={post.title} description={post.excerpt} image={post.og_image} blogpost>
    <article class="max-w-screen-md mx-auto">
      <div class="rounded-lg block overflow-hidden mb-8">
        {
          post.feature_image && (
            <figure class="w-auto h-auto object-cover">
              <Image
                class=""
                src={post.feature_image}
                alt={post.feature_image_alt || "a decorative feature image"}
                width={960}
                height={480}
                decoding="async"
                loading="lazy"
              />
            </figure>
          )
        }
      </div>
      <div class="md:col-10 text-center mb-12">
        <h1 class="text-2xl md:text-4xl font-bold">{post.title}</h1>
        <div class="mt-4 flex flex-wrap items-center justify-center text-text text-zinc-800 dark:text-zinc-200">
          <div class="mx-3 flex items-center flex-wrap font-medium mt-2">
            <figure>
              <Image
                alt={post.feature_image_alt || "a decorative feature image"}
                class="mr-2 h-6 w-6 rounded-full"
                width={50}
                height={50}
                src={post.primary_author?.profile_image}
                decoding="async"
                loading="lazy"
              />
            </figure>
            <span>{post.primary_author?.name}</span>
          </div>
          <div class="mx-3 flex items-center flex-wrap font-medium mt-2">
            <CalendarIcon />
            <FormattedDate date={post.created_at} />
          </div>
          <div class="mx-3 flex items-center flex-wrap font-medium mt-2">
            <CategoryIcon />
            {
              post.tags?.slice(0, 1).map((tag: Tag) => (
                <a
                  href={`/categories/${slugify(tag.name)}`}
                  class="mr-2 hover:text-primary font-medium capitalize"
                >
                  {tag.name}
                </a>
              ))
            }
          </div>
        </div>
      </div>
      <div class="prose prose-green prose-md md:prose-lg min-w-full">
        <Fragment set:html={post.html} />
      </div>
      <div class="mt-8">
        {
          post.tags?.map((tag: Tag) => (
            <a
              href={`/tags/${slugify(tag.name)}`}
              class="capitalize inline-block bg-zinc-200 rounded-full px-3 py-1 text-sm font-semibold text-zinc-700 mr-2 mb-2 dark:bg-zinc-900 dark:text-zinc-400"
            >
              #{tag.name}
            </a>
          ))
        }
      </div>
    </article>
  </Base>
